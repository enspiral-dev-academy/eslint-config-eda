#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const { exec } = require('child_process')

const packageJson = require('./package.json')
const render = require('./README.template')

const eslintVersion = packageJson.peerDependencies.eslint.replace('^', '')
const configVersion = packageJson.version
const minor = configVersion.split('.')[1]

const gitTags = exec('git tag', (error, stdout, stderr) => {
  if (error) return showError('calling `git tag` command', error)
  if (stderr) return showError('understading `git tag` command', stderr)

  const tags = stdout.split('\n')
  const otherVersion = tags.find((t) => t && t.split('.')[1] !== minor)

  const readmePath = path.join(__dirname, 'README.md')
  const contents = render(eslintVersion, configVersion, otherVersion)

  try {
    fs.writeFileSync(readmePath, contents, 'utf8')
    console.log('README file rendered successfully')
  } catch (err) {
    showError('saving readme file', err)
  }
})

function showError(when, err) {
  console.error(`Error ${when}:\n`, err)
  process.exit(1)
}
